; This file contains the externalized sql statements for rip runner specific to sqlite

database_exists_check = "SELECT count(tbl_name) as count FROM sqlite_master WHERE :dbname = :dbname"

database_table_exists_check = "SELECT count(tbl_name) as count FROM sqlite_master WHERE tbl_name = :dbtable AND :dbname = :dbname"

login_brute_force_check = "SELECT time FROM login_attempts
                           WHERE useracctid = :id AND time > datetime('now','-2 hours')"

login_brute_force_insert = "INSERT INTO login_attempts(useracctid, time)
                            VALUES (:uid, datetime('now'))"

user_accounts_update_twofa = "UPDATE user_accounts
                        SET twofa_key = :twofa_key, updatetime = datetime('now')
                        WHERE user_id = :user_id"

check_live_callouts = "SELECT * FROM callouts 
                       WHERE status NOT IN (3,10) AND (julianday() - julianday(calltime) * 24.0) <= :max_age
                       ORDER BY id DESC LIMIT 1"

trigger_history_insert = "INSERT INTO trigger_history (triggertime, type, firehall_id, hash_data) 
                            SELECT datetime('now'), :type, :fhid, :hash_data 
                            WHERE NOT EXISTS (SELECT 1 FROM trigger_history WHERE type=:type AND firehall_id=:fhid AND hash_data=:hash_data) 
                            LIMIT 1"
                            
check_live_callouts_max = "SELECT * FROM callouts 
                           WHERE status NOT IN (3,10) AND (julianday() - julianday(calltime) * 24.0) <= :max_age
                           ORDER BY id DESC LIMIT 5"

type_list_select = "SELECT *,((datetime('now') > effective_date OR effective_date is NULL) and 
                      (datetime('now') < expiration_date OR expiration_date is NULL)) as active 
                      FROM callout_type order by active DESC,code ASC"

login_brute_force_check_ip = "SELECT count(*) FROM login_audit
                              WHERE login_ip = :login_ip AND status >= 100 AND updatetime > datetime('now','-2 hours')"

login_brute_force_check_ip = "SELECT count(*) FROM login_audit
                              WHERE login_ip = :login_ip AND status >= 100 AND 
                              (SELECT count(*) FROM login_audit WHERE login_ip = :login_ip AND status IN (10) AND updatetime > datetime('now','-2 hours')) <= 0 AND
                              updatetime > datetime('now','-2 hours')"

schema_upgrade_6_0 = "ALTER TABLE user_accounts MODIFY twofa INTEGER NOT NULL DEFAULT 0;"
schema_upgrade_6_0_skip_error = true
